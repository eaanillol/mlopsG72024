services:
  api:
    build:
      context: .
      dockerfile: Dockerfile_api
    volumes:
      - ./app:/code/app
    ports:
      - "8085:8000"
    depends_on:
      - minio
    environment:
      MLFLOW_URI: "http://mlflow_serv:8084"
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: supersecret
  
  streamlit_app:
    build:
      context: .
      dockerfile: Dockerfile_streamlit
    ports:
      - "8086:8501"
    depends_on:
      - api
  
  jupyter:
    image: jupyter/datascience-notebook:latest
    container_name: jupyterp3
    ports:
      - 8888:8888

  minio:
    container_name: Minio_p3
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '8083:9001'
    volumes:
      - ./minio:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  postgres_mlflow:
    restart: always
    image: postgres
    container_name: pg_mlflow
    expose:
      - "${PG_PORT}"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DATABASE=${PG_DATABASE}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  mysql_raw:
    image: mysql:latest
    container_name: mysql_raw
    ports:
      - "8082:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234567
      MYSQL_DATABASE: cover_type
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  minio-data:
  postgres-db-volume:
  mysql_data:
